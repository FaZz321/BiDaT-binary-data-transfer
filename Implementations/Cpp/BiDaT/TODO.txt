ОСНОВНЫЕ КОНЦЕПЦИИ:

1. Оригинальное сообщение рассматривается в режиме read only. То есть изменения в него не вносятся.
2. При необходимости изменить какую-то часть сообщения выделяется дополнительная память для конкретного значения.
3. Изначально узлы-скаляры ссылаются на области памяти в оригинальном сообщении. При изменении значений выделяется дополнительная память.
4. По окончании работы, сообщение кодируется в новую область памяти.


ТЕКУЩИЕ ЗАДАЧИ:

0 Проверка концепций
    + 0.1 Класс узлов
    + 0.2 Класс списков
    + 0.3 Класс корневого узла
    + 0.4 Реализовать уровни доступа
    + 0.5 Узел бинарных данных
    + 0.6 Узел строк
    + 0.7 Узел именованных массивов
	+ 0.8 Объект корневого узла
	+ 0.9 Управление памятью (чистка при удалении и подобное)
	+ 0.10 Доступ к данным по индексу или ключу
	+ 0.11 Использовать хэш для быстрого доступа к данным по ключу.
	+ 0.12 Построение дерева
	+ 0.13 Кодирование
	+ 0.14 Демонстрации
	+ 0.15 Прикинуть, как с этим работать с точки зрения пользователя
	0.16 Чтение файлов стандартными средствами  

1 Сомнительные вещи:
	1.1 Кодирование и декодирование пустых списков (для питона тоже)
	+ 1.2 Когда закончишь с кодированием проведи все тесты ещё один раз. После смены типов, я не доверяю этому дерьму.